app.js

const express = require("express");
const path = require("path");
const app = express();

// Middleware to parse incoming JSON requests
app.use(express.json());

// Routes
const cardRoutes = require("./routes/index");
app.use("/cards", cardRoutes);

// Serve index.html for root route
app.get("/", (req, res) => {
  res.sendFile(path.join(__dirname, "index.html"));
});

// Start server
const PORT = 3000;
app.listen(PORT, () => {
  console.log(`Server running at http://localhost:${PORT}`);
});





index.js 

const express = require("express");
const router = express.Router();

// In-memory playing cards collection
let cards = [
  { id: 1, suit: "Hearts", value: "Ace" },
  { id: 2, suit: "Spades", value: "King" },
  { id: 3, suit: "Diamonds", value: "Queen" }
];

// ✅ GET all cards
router.get("/", (req, res) => {
  res.json(cards);
});

// ✅ GET card by ID
router.get("/:id", (req, res) => {
  const cardId = parseInt(req.params.id);
  const card = cards.find(c => c.id === cardId);

  if (!card) {
    return res.status(404).json({ error: "Card not found" });
  }
  res.json(card);
});

// ✅ POST add new card
router.post("/", (req, res) => {
  const { suit, value } = req.body;

  if (!suit || !value) {
    return res.status(400).json({ error: "Suit and value are required" });
  }

  const newCard = {
    id: cards.length ? cards[cards.length - 1].id + 1 : 1,
    suit,
    value
  };

  cards.push(newCard);
  res.status(201).json(newCard);
});

// ✅ DELETE card by ID
router.delete("/:id", (req, res) => {
  const cardId = parseInt(req.params.id);
  const index = cards.findIndex(c => c.id === cardId);

  if (index === -1) {
    return res.status(404).json({ error: "Card not found" });
  }

  cards.splice(index, 1);
  res.json({ message: `Card with ID ${cardId} removed` });
});

module.exports = router;







index.html


<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Playing Cards API</title>
</head>
<body>
  <h1>Playing Cards REST API</h1>
  <p>Use Postman or browser to test the API:</p>
  <ul>
    <li><a href="/cards" target="_blank">GET /cards</a> → Get all cards</li>
    <li><a href="/cards/2" target="_blank">GET /cards/2</a> → Get card by ID</li>
  </ul>
  <p>Use <strong>POST</strong> & <strong>DELETE</strong> in Postman for adding/removing cards.</p>
</body>
</html>

